app CoverLetterGPT {
  wasp: {
    version: "^0.16.0"
  },
  title: "Søknad GPT",
  head: [
    "<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">",
    "<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>",
    "<link rel=\"preconnect\" href=\"https://api.cvcv.no\">",
    "<link rel=\"dns-prefetch\" href=\"https://js.stripe.com\">",
    "<link rel=\"dns-prefetch\" href=\"https://www.google-analytics.com\">",
    "<link rel=\"dns-prefetch\" href=\"https://www.googletagmanager.com\">",
    "<link rel=\"preload\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">",
    "<link rel=\"preload\" href=\"https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiA.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>",
    "<link rel=\"preload\" href=\"https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuI6fAZ9hiA.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>",
    "<noscript><link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap\"></noscript>",
    "<style>/* Minimal critical CSS - only font fallbacks and loading state */body{font-family:system-ui,-apple-system,sans-serif}.loading{opacity:0.7;pointer-events:none}h1,h2,h3{font-family:'Inter',system-ui,-apple-system,sans-serif}</style>",
    "<meta charset=\"UTF-8\" />",
    "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />",
    "<meta name=\"emotion-insertion-point\" content=\"\">",
    "<meta name=\"description\" content=\"Lag profesjonelle og skreddersydde søknadsbrev med kunstig intelligens på få sekunder. SøknadGPT bruker GPT-4o for å skrive personlige søknader basert på din CV og stillingsbeskrivelse. Prøv 3 søknader helt gratis, deretter kun 49kr for 50 søknadsbrev. Automatisk utfylling fra Finn.no og 100% menneskelig skrift som passerer alle AI-deteksjonstester.\" />",
    "<meta property=\"og:type\" content=\"website\" />",
    "<meta property=\"og:url\" content=\"https://www.cvcv.no\" />",
    "<meta property=\"og:title\" content=\"SøknadGPT: Lag Profesjonelle Søknadsbrev med AI på Sekunder - Fra 49kr for 50 søknader\" />",
    "<meta property=\"og:description\" content=\"Skape skreddersydde søknadsbrev med GPT-4o på få sekunder. Automatisk utfylling fra Finn.no, 100% menneskelig skrift, prøv 3 gratis. Kun 49kr for 50 søknadsbrev - ingen abonnement.\" />",
    "<meta property=\"og:image\" content=\"https://www.cvcv.no/og-image.png\" />",
    "<meta name=\"twitter:card\" content=\"summary_large_image\" />",
    "<meta name=\"twitter:title\" content=\"SøknadGPT: Lag Profesjonelle Søknadsbrev med AI på Sekunder\" />",
    "<meta name=\"twitter:description\" content=\"Skape skreddersydde søknadsbrev med GPT-4o på få sekunder. Prøv 3 gratis, deretter kun 49kr for 50 søknadsbrev. Ingen abonnement.\" />",
    "<meta name=\"twitter:image\" content=\"https://www.cvcv.no/twitter-image.png\" />",
    "<meta name=\"author\" content=\"Søknad GPT\" />",
    "<meta name=\"google-site-verification\" content=\"DXY1MXPsdD0bwttb10x5zps-rktKOnxkZ2yUi5PQrW8\" />",
    "<link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />",
    "<script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Service\",\"name\":\"SøknadGPT\",\"description\":\"Hjelp til søknad.\",\"provider\":{\"@type\":\"Organization\",\"name\":\"Søknad GPT\",\"url\":\"https://www.cvcv.no\"}}</script>"
  ],
  auth: {
    userEntity: User,
    methods: {
      google: {
        userSignupFields: import { getUserFields } from "@src/server/auth.ts",
        configFn: import { config } from "@src/server/auth.ts",
      },
    },
    onAuthFailedRedirectTo: "/",
  },
  client: {
    rootComponent: import App from "@src/client/App",
    setupFn: import clientSetup from "@src/client/clientSetup"
  },
  server: {
    setupFn: import serverSetup from "@src/server/serverSetup"
  },
  emailSender: {
    provider: SendGrid,
    defaultFrom: {
      name: "CVCV",
      email: "mail@cvcv.no",
    },
  },
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@src/client/pages/MainPageWrapper"
}

route CoverLetterPage { path: "/cover-letter/:id", to: CoverLetterPage }
page CoverLetterPage {
  authRequired: true,
  component: import CoverLetter from "@src/client/pages/CoverLetterPageWrapper"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/client/pages/LoginPageWrapper"
}

route JobsRoute { path: "/jobs", to: JobsPage }
page JobsPage {
  authRequired: true,
  component: import Jobs from "@src/client/pages/JobsPageWrapper"
}

route ProfileRoute { path: "/profile", to: ProfilePage }
page ProfilePage {
  authRequired: true,
  component: import Profile from "@src/client/pages/ProfilePageWrapper"
}

route CheckoutRoute { path: "/checkout", to: CheckoutPage }
page CheckoutPage {
  authRequired: true,
  component: import Checkout from "@src/client/pages/CheckoutPageWrapper"
}

route TosRoute { path: "/tos", to: TosPage }
page TosPage {
  component: import Tos from "@src/client/pages/TosPageWrapper"
}

route PrivacyRoute { path: "/privacy", to: PrivacyPage }
page PrivacyPage {
  component: import Privacy from "@src/client/pages/PrivacyPageWrapper"
}

action generateCoverLetter {
  fn: import { generateCoverLetter } from "@src/server/actions.js",
  entities: [CoverLetter, User, LnPayment]
}

action createJob {
  fn: import { createJob } from "@src/server/actions.js",
  entities: [Job]
}

action updateJob {
  fn: import { updateJob } from "@src/server/actions.js",
  entities: [Job]
}

action updateCoverLetter {
  fn: import { updateCoverLetter } from "@src/server/actions.js",
  entities: [Job, CoverLetter, User, LnPayment]
}

action generateEdit {
  fn: import { generateEdit } from "@src/server/actions.js",
  entities: [CoverLetter, User, LnPayment]
}

action editCoverLetter {
  fn: import { editCoverLetter } from "@src/server/actions.js",
  entities: [CoverLetter]
}

action updateUser {
  fn: import { updateUser } from "@src/server/actions.js",
  entities: [User]
}

action deleteJob {
  fn: import { deleteJob } from "@src/server/actions.js",
  entities: [Job]
}

action stripePayment {
  fn: import { stripePayment } from "@src/server/actions.js",
  entities: [User]
}

action stripeGpt4Payment {
  fn: import { stripeGpt4Payment } from "@src/server/actions.js",
  entities: [User]
}

action stripeCreditsPayment {
  fn: import { stripeCreditsPayment } from "@src/server/actions.js",
  entities: [User]
}

action getLnLoginUrl {
  fn: import { getLnLoginUrl } from "@src/server/ln.js",
  entities: [User, LnData]
}

action decodeInvoice {
  fn: import { decodeInvoice } from "@src/server/ln.js",
}

action updateLnPayment {
  fn: import { updateLnPayment } from "@src/server/ln.js",
  entities: [LnPayment]
}

action milliSatsToCents {
  fn: import { milliSatsToCents } from "@src/server/ln.js",
}

action scrapeJob {
  fn: import { scrapeJob } from "@src/server/actions.js",
}

query getJobs {
  fn: import { getJobs } from "@src/server/queries.js",
  entities: [Job]
}

query getJob {
  fn: import { getJob } from "@src/server/queries.js",
  entities: [Job]
}

query getCoverLetter {
  fn: import { getCoverLetter } from "@src/server/queries.js",
  entities: [CoverLetter]
}

query getCoverLetters {
  fn: import { getCoverLetters } from "@src/server/queries.js",
  entities: [CoverLetter]
}

query getUserInfo {
  fn: import { getUserInfo } from "@src/server/queries.js",
  entities: [User]
}

query getLnUserInfo {
  fn: import { getLnUserInfo } from "@src/server/ln.js",
  entities: [User, LnData]
}


api stripeWebhook {
  fn: import { stripeWebhook } from "@src/server/webhooks.js",
  entities: [User],
  httpRoute: (POST, "/stripe-webhook")
}

api lnLogin {
  fn: import { lnLogin } from "@src/server/ln.js",
  entities: [User, LnData],
  httpRoute: (GET, "/ln-login")
}

api cspReport {
  fn: import { handleCspReport } from "@src/server/cspReport.js",
  httpRoute: (POST, "/csp-report")
}

api cspStats {
  fn: import { getCspStatsHandler } from "@src/server/cspReport.js",
  httpRoute: (GET, "/csp-stats")
}

job checkUserSubscription {
  executor: PgBoss,
  perform: {
    fn: import { updateUserSubscription } from "@src/server/workers/updateUserSubscription.js"
  },
  schedule: {
    cron: "0 23 * * *"
  },
  entities: [User]
}
