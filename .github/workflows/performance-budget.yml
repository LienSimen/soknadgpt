name: Performance Budget Check

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  performance-budget:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download previous bundle analysis (if exists)
      continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: bundle-analysis-previous
        path: .
        
    - name: Build with bundle analysis
      env:
        CI: true
        ANALYZE_BUNDLE: true
      run: npm run bundle:report
      
    - name: Upload bundle analysis artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis-reports
        path: |
          bundle-stats.html
          bundle-analyzer-detailed.html
          bundle-report.json
          bundle-analysis-summary.json
        retention-days: 30
        
    - name: Save current analysis for next comparison
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis-previous
        path: bundle-analysis-summary.json
        retention-days: 90
        
    - name: Comment PR with bundle analysis
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read bundle analysis summary
          let summary;
          try {
            summary = JSON.parse(fs.readFileSync('bundle-analysis-summary.json', 'utf8'));
          } catch (error) {
            console.log('Could not read bundle analysis summary');
            return;
          }
          
          // Create status emoji and message
          const statusEmoji = {
            'PASSED': '✅',
            'WARNING': '⚠️',
            'FAILED': '❌'
          };
          
          const emoji = statusEmoji[summary.status] || '❓';
          
          // Create comment body
          const commentBody = `## ${emoji} Bundle Analysis Report
          
          **Status:** ${summary.status}
          **Total Bundle Size:** ${summary.totalSize}
          **Budget Usage:** ${summary.budgetUsage}
          **Chunks:** ${summary.chunksCount}
          **Large Chunks:** ${summary.largeChunksCount}
          
          ### Performance Budget
          - **Target:** < 500 KiB total bundle size
          - **Warning Threshold:** 80% of budget (400 KiB)
          - **Current Usage:** ${summary.budgetUsage}
          
          ${summary.status === 'FAILED' ? '⚠️ **Bundle size budget exceeded!** Consider optimizing before merging.' : ''}
          ${summary.status === 'WARNING' ? '⚠️ **Bundle size approaching limit.** Monitor for further increases.' : ''}
          ${summary.status === 'PASSED' ? '✅ **Bundle size within acceptable limits.**' : ''}
          
          <details>
          <summary>View detailed analysis</summary>
          
          The detailed bundle analysis reports are available in the build artifacts:
          - \`bundle-stats.html\` - Interactive treemap visualization
          - \`bundle-analyzer-detailed.html\` - Detailed sunburst chart
          - \`bundle-report.json\` - Raw analysis data
          
          </details>
          
          ---
          *Generated at ${new Date(summary.timestamp).toLocaleString()}*`;
          
          // Post comment
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });
          
    - name: Fail if budget exceeded
      if: always()
      run: |
        if [ -f "bundle-analysis-summary.json" ]; then
          STATUS=$(node -p "JSON.parse(require('fs').readFileSync('bundle-analysis-summary.json', 'utf8')).status")
          if [ "$STATUS" = "FAILED" ]; then
            echo "❌ Performance budget exceeded!"
            exit 1
          fi
        fi